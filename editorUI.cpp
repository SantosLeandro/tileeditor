// generated by Fast Light User Interface Designer (fluid) version 1.0308

#include "editorUI.h"

void EditorUI::cb_menuOpen_i(Fl_Menu_*, void*) {
  //open file
char *newfile = fl_file_chooser("Open File?", "*.json", filename);
if(editorView->level){
  delete editorView->level;
}
editorView->level = LoadLevel(newfile);
editorView->redraw();
}
void EditorUI::cb_menuOpen(Fl_Menu_* o, void* v) {
  ((EditorUI*)(o->parent()->user_data()))->cb_menuOpen_i(o,v);
}

void EditorUI::cb_menuSaveAs_i(Fl_Menu_*, void*) {
  //save as;
}
void EditorUI::cb_menuSaveAs(Fl_Menu_* o, void* v) {
  ((EditorUI*)(o->parent()->user_data()))->cb_menuSaveAs_i(o,v);
}

Fl_Menu_Item EditorUI::menu_[] = {
 {"File", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"New", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Open", 0,  (Fl_Callback*)EditorUI::cb_menuOpen, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Save", 0,  0, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {"Save As", 0,  (Fl_Callback*)EditorUI::cb_menuSaveAs, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 14, 0},
 {0,0,0,0,0,0,0,0,0},
 {0,0,0,0,0,0,0,0,0}
};
Fl_Menu_Item* EditorUI::menuNew = EditorUI::menu_ + 1;
Fl_Menu_Item* EditorUI::menuOpen = EditorUI::menu_ + 2;
Fl_Menu_Item* EditorUI::menuSave = EditorUI::menu_ + 3;
Fl_Menu_Item* EditorUI::menuSaveAs = EditorUI::menu_ + 4;

EditorUI::EditorUI() {
  { mainWindow = new Fl_Window(1165, 780);
    mainWindow->user_data((void*)(this));
    { editorView = new EditorView(320, 25, 845, 860, "EditorView");
      editorView->box(FL_UP_BOX);
      editorView->color(FL_BACKGROUND_COLOR);
      editorView->selection_color(FL_BACKGROUND_COLOR);
      editorView->labeltype(FL_NORMAL_LABEL);
      editorView->labelfont(0);
      editorView->labelsize(14);
      editorView->labelcolor(FL_FOREGROUND_COLOR);
      editorView->align(Fl_Align(FL_ALIGN_CENTER));
      editorView->when(FL_WHEN_RELEASE);
    } // EditorView* editorView
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 1165, 25);
      o->menu(menu_);
    } // Fl_Menu_Bar* o
    { Fl_Group* o = new Fl_Group(0, 25, 320, 770);
      { Fl_Tabs* o = new Fl_Tabs(0, 215, 320, 580);
        { Fl_Group* o = new Fl_Group(0, 235, 320, 560, "Tileset");
          { tilesetPicker = new Fl_Box(5, 245, 310, 335);
            tilesetPicker->box(FL_ENGRAVED_BOX);
          } // Fl_Box* tilesetPicker
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(0, 235, 320, 560, "GameObjects");
          o->hide();
          o->end();
        } // Fl_Group* o
        o->end();
      } // Fl_Tabs* o
      { BrowserLayer = new Fl_Browser(5, 30, 310, 175);
      } // Fl_Browser* BrowserLayer
      o->end();
    } // Fl_Group* o
    Fl::scheme("plastic");
    mainWindow->end();
    mainWindow->resizable(mainWindow);
  } // Fl_Window* mainWindow
}

void EditorUI::show(int argc, char **argv) {
  mainWindow->show(argc,argv);
}
