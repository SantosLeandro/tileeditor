# data file for the Fltk User Interface Designer (fluid)
version 1.0308
header_name {.h}
code_name {.cpp}
decl {\#include <FL/Fl_File_Chooser.H>} {public global
}

decl {\#include "level.h"} {public global
}

decl {\#include "loader.h"} {public global
}

decl {\#include <FL/Fl_BMP_Image.H>} {public global
}

decl {\#include <FL/Fl_PNG_Image.H>} {public global
}

decl {\#include <FL/Fl_JPEG_Image.H>} {public global
}

decl {\#include "global.h"} {public global
}

class EditorUI {open
} {
  Function {EditorUI()} {open
  } {
    Fl_Window mainWindow {open
      xywh {352 194 1165 780} type Single resizable
      code0 {Fl::scheme("plastic");} visible
    } {
      Fl_Box editorView {
        label EditorView
        xywh {320 25 845 860} box UP_BOX
        code0 {\#include "editor.h"}
        class EditorView
      }
      Fl_Menu_Bar {} {open
        xywh {0 0 1165 25}
      } {
        Submenu {} {
          label File open
          xywh {0 0 100 20}
        } {
          MenuItem menuNew {
            label New
            xywh {0 0 100 20}
          }
          MenuItem menuOpen {
            label Open
            callback {//open file
  char *newfile = fl_file_chooser("Open File?", "*.json", filename);
  if(editorView->level){
    delete editorView->level;
  }
  editorView->level = LoadLevel(newfile);
  editorView->redraw();
  TileSelector::tileSize = editorView->level->tileSize;
  tilesetUI->load_image("tileset_1616.png");} selected
            xywh {0 0 100 20}
          }
          MenuItem menuSave {
            label Save
            xywh {0 0 100 20}
          }
          MenuItem menuSaveAs {
            label {Save As}
            callback {//save as}
            xywh {0 0 100 20}
          }
        }
      }
      Fl_Group {} {open
        xywh {-10 25 340 770}
      } {
        Fl_Tabs {} {open
          xywh {0 215 320 580}
        } {
          Fl_Group {} {
            label Tileset open
            xywh {0 235 320 560} box GLEAM_DOWN_FRAME
          } {
            Fl_Box tilesetUI {
              xywh {5 246 305 304} color 44 selection_color 45 align 581
              code0 {\#include "tilesetUI.h"}
              class TilesetUI
            }
          }
          Fl_Group {} {
            label GameObjects open
            xywh {10 235 310 560} hide
          } {}
        }
        Fl_Browser BrowserLayer {
          xywh {5 30 310 175}
        }
      }
    }
  }
  Function {show(int argc, char **argv)} {open
  } {
    code {mainWindow->show(argc,argv);} {}
  }
  decl {char* filename} {protected local
  }
  Function {loadTileset(const char* file)} {open
  } {
    code {if (file != NULL) {
        Fl_Image *img = nullptr;

        // Determine the file extension and load the image accordingly
        std::string filename = file;
        if (filename.find(".bmp") != std::string::npos) {
            img = new Fl_BMP_Image(file);  // Load BMP image
        } else if (filename.find(".png") != std::string::npos) {
            img = new Fl_PNG_Image(file);  // Load PNG image
        } else if (filename.find(".jpg") != std::string::npos || filename.find(".jpeg") != std::string::npos) {
            img = new Fl_JPEG_Image(file); // Load JPEG image
        }

        // Check if the image is valid and set it to the box
        if (img && img->w() > 0 && img->h() > 0) {
            tilesetUI->image(img);               // Set the image in the box
            tilesetUI->redraw();                 // Redraw the box to show the image
        } else {
            delete img;                    // Clean up if the image was invalid
            fl_alert("Invalid Image file!");
        }
    }} {}
  }
}
