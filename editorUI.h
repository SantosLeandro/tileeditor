// generated by Fast Light User Interface Designer (fluid) version 1.0308

#ifndef editorUI_h
#define editorUI_h
#include <FL/Fl.H>
#include <FL/Fl_File_Chooser.H>
#include "level.h"
#include "loader.h"
#include <FL/Fl_BMP_Image.H>
#include <FL/Fl_PNG_Image.H>
#include <FL/Fl_JPEG_Image.H>
#include "global.h"
#include <FL/Fl_Window.H>
#include "editor.h"
#include <FL/Fl_Menu_Bar.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Tabs.H>
#include "tilesetUI.h"
#include <FL/Fl_Browser.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Button.H>

class EditorUI {
public:
  EditorUI();
  Fl_Window *mainWindow;
  EditorView *editorView;
  static Fl_Menu_Item menu_[];
  static Fl_Menu_Item *menuNew;
  static Fl_Menu_Item *menuOpen;
private:
  inline void cb_menuOpen_i(Fl_Menu_*, void*);
  static void cb_menuOpen(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menuSave;
private:
  inline void cb_menuSave_i(Fl_Menu_*, void*);
  static void cb_menuSave(Fl_Menu_*, void*);
public:
  static Fl_Menu_Item *menuSaveAs;
private:
  inline void cb_menuSaveAs_i(Fl_Menu_*, void*);
  static void cb_menuSaveAs(Fl_Menu_*, void*);
  inline void cb_Undo_i(Fl_Menu_*, void*);
  static void cb_Undo(Fl_Menu_*, void*);
  inline void cb_Delete_i(Fl_Menu_*, void*);
  static void cb_Delete(Fl_Menu_*, void*);
public:
  TilesetUI *tilesetUI;
  Fl_Browser *BrowserGameObject;
  Fl_Input *layerName;
  Fl_Value_Input *layerW;
  Fl_Value_Input *layerH;
  Fl_Input *layerTexture;
  Fl_Button *applyLayer;
private:
  inline void cb_applyLayer_i(Fl_Button*, void*);
  static void cb_applyLayer(Fl_Button*, void*);
public:
  Fl_Browser *BrowserLayer;
private:
  inline void cb_BrowserLayer_i(Fl_Browser*, void*);
  static void cb_BrowserLayer(Fl_Browser*, void*);
public:
  Fl_Button *btnPencil;
  Fl_Button *btnEraser;
private:
  inline void cb_btnEraser_i(Fl_Button*, void*);
  static void cb_btnEraser(Fl_Button*, void*);
public:
  Fl_Button *btnCopy;
private:
  inline void cb_btnCopy_i(Fl_Button*, void*);
  static void cb_btnCopy(Fl_Button*, void*);
public:
  Fl_Button *btnPaste;
private:
  inline void cb_btnPaste_i(Fl_Button*, void*);
  static void cb_btnPaste(Fl_Button*, void*);
public:
  Fl_Button *btnSelect;
  void show(int argc, char **argv);
protected:
  char* filename; 
public:
  void loadTileset(const char* file);
};
#endif
